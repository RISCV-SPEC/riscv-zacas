# This workflow installs dependencies for PDF generation, generates the PDF,
# and uploads the PDF as an artifact.

name: Build Document PDF

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    outputs:
      name:
        description: "The base name of the pdf file (without .pdf extensions)"
        value: ${{ jobs.build.outputs.name }}
      pdf-name:
        description: "The name of the pdf file (with .pdf extensions)"
        value: ${{ jobs.build.outputs.pdf-name }}

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      NAME: example-spec
      APT_PACKAGES_FILE: ${{ github.workspace }}/dependencies/apt_packages.txt
      BUNDLE_GEMFILE: ${{ github.workspace }}/dependencies/Gemfile
      BUNDLE_BIN: ${{ github.workspace }}/bin
      NPM_PACKAGE_FOLDER: ${{ github.workspace }}/dependencies
    outputs:
      name: ${{ steps.step1.outputs.name }}
      pdf-name: ${{ steps.step2.outputs.pdf-name }}
    steps:
      # Set the output variables
      - name: Set outputs.name
        id: step1
        run: echo "name=$NAME" >> $GITHUB_OUTPUT
      - name: Set outputs.pdf-name
        id: step2
        run: echo "pdf-name=$NAME.pdf" >> $GITHUB_OUTPUT
      
      # Check out the repository and its submodules
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"
      
      # Install required Ubuntu packages
      - name: Install Ubuntu packages
        run: |
          sudo apt-get update
          grep -vE '^#' ${APT_PACKAGES_FILE} | xargs sudo apt-get install --yes --no-install-recommends
      
      # Set up Ruby environment for Asciidoctor
      - name: Setup Ruby and Gemfile content
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.0"
          bundler-cache: true
      
      # Cache Node.js dependencies
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Set up Node.js environment for WaveDrom
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      
      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm install ${NPM_PACKAGE_FOLDER}
      
      # Generate the PDF using Make
      - name: Generate PDF
        run: |
          PATH=${PATH}:${BUNDLE_BIN}:$(npm bin) \
          make
      
      # Upload the generated PDF as an artifact
      - name: Archive PDF result
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME }}.pdf
          path: ${{ env.NAME }}.pdf
          retention-days: 7